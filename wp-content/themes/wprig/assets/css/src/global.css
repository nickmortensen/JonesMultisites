/*--------------------------------------------------------------
>>> TABLE OF CONTENTS:
----------------------------------------------------------------
# Imports
	# Custom properties
	# Reset
	# Typography
	# Elements
	# Links
# Accessibility
# Layout
# About
# Infinite scroll
# Content navigation
# Flexbox styles
# SVG
# Flickity Overrides
# Show & Hide Styles
# Forms
# Header
	# Main navigation menu
# Content navigation
# Footer
# Infinite scroll
# Unicode Primer
	# "\2714" = ✔
	# "\2713" = ✓
	# "\2706" = ✆
	# "\25BE" = ▾
	# "\002b" = +
--------------------------------------------------------------*/

/*---------------------------------------------------- ----------
# Imports
--------------------------------------------------------------*/
@import "_custom-properties.css";
@import "_custom-selectors.css";
@import "_custom-media.css";

@import "_typography.css";
@import "_grid.css";
@import "_keyframes.css";


@import "_site-search.css";

@import "_navigation.css";
@import "_header.css";
@import "_masthead.css";
@import "_forms.css";
@import "_locations.css";
@import "_select.css";
@import "_sidenav.css";
@import "_buttons_icons.css";

/*--------------------------------------------------------------
# Layout
--------------------------------------------------------------*/

/* @link css-tricks.com/fixing-smooth-scrolling-with-find-on-page/ */
html:focus-within {
	scroll-behavior: smooth;
}

@media (prefers-reduced-motion) {
	html:focus-within {
		scroll-behavior: auto;
	}
}

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
	box-sizing: border-box;
	line-height: 1.15; /* 1 */
	scroll-behavior: smooth;
	height: 100%;
	width: 100%;
	overflow-y: visible;
	overflow-x: hidden;
}

/**
 * Inherit box-sizing to make it easier to change the property for
 * components that leverage other behavior; see
 * http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */

*,
*::before,
*::after {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

body {
	height: 100%;
	margin: 0;
}

/*--------------------------------------------------------------
# About
--------------------------------------------------------------*/

#about {
	display: flex;
	flex-flow: column nowrap;
	min-height: 4vh;
	justify-content: center;
	align-items: center;
	color: var(--text-color);

	& h3 {
		margin: 0 auto;
		font-size: clamp(var(--fontsize-xl), 4vw, 88px);
	}

	& span {
		font-family: var(--highlight-font-family);
		width: clamp(220px, 80vw, 1600px);
		font-size: var(--fontsize-m);
	}
}

/*--------------------------------------------------------------
# Infinite scroll
--------------------------------------------------------------*/

/* Globally hidden elements when Infinite Scroll is supported and in use. */
.infinite-scroll .posts-navigation,
.infinite-scroll .pagination,
.infinite-scroll.neverending .site-footer {
	display: none;
}

/* When Infinite Scroll has reached its end we need to re-display elements that
were hidden (via .neverending) before. */
.infinity-end.neverending .site-footer { display: block; }


/*--------------------------------------------------------------
# Content navigation
--------------------------------------------------------------*/
.site-main .comment-navigation,
.site-main .posts-navigation,
.site-main .post-navigation,
.site-main .pagination {
	border-bottom: 1px solid var(--background);
	margin: 0 auto 2em;
	overflow: hidden;
	padding: 0 1.5rem 2em;
	font-family: var(--highlight-font-family);
	font-stretch: condensed;
}

@media screen and (width > 768px) {
	.site-main .comment-navigation,
	.site-main .posts-navigation,
	.site-main .post-navigation,
	.site-main .pagination {
		padding-left: 0;
		padding-right: 0;
	}
}

.comment-navigation .nav-previous,
.posts-navigation .nav-previous,
.post-navigation .nav-previous {
	width: 50%;
	flex: 1 0 50%;
}

.comment-navigation .nav-next,
.posts-navigation .nav-next,
.post-navigation .nav-next {
	text-align: end;
	flex: 1 0 50%;
}

.post-navigation-sub span {
	color: var(--global-font-color);
	text-decoration: none;
	display: inline-block;
}

.site-main .pagination {
	margin-bottom: 1.5em;
}

.pagination .nav-links {
	justify-content: center;
	flex-wrap: wrap;
}

.pagination .page-numbers {
	display: inline-block;
	margin-bottom: 0.5em;
	margin-right: 1em;
	border: 1px solid var(--color-link);
	min-width: 1.75em;
	line-height: 1.75;
	text-align: center;
	text-decoration: none;
}

.pagination a:visited {
	color: var(--color-link);
}

.pagination a:hover,
.pagination a:focus,
.pagination a:active {
	border-color: #00a0d2;
}

.pagination .prev,
.pagination .next {
	min-width: auto;
	border-color: transparent;
	text-decoration: underline;
}

.pagination .prev:hover,
.pagination .prev:focus,
.pagination .prev:active,
.pagination .next:hover,
.pagination .next:focus,
.pagination .next:active {
	border-color: transparent;
}

.pagination .dots {
	min-width: auto;
	border: none;
}

.pagination .current {
	border-color: var(--global-font-color);
}


/* NOTE THAT THIS WILL STILL BE SEEN BY SCREEN READERS & Will take up whitespace */
.invisible { visibility: hidden; }

/* Removes the element from the DOM altogether */
template,
[hidden],
.display_none,
.remove {
	display: none;
}

.no-js .lazy { display: none !important; }

.show_as_block { display: block; }

/* --------------------------------
	# Flexbox styles
-----------------------------------*/
.show_as_flex,
.flex { display: flex; }

/* flex flow displays the direction and the wrap styles, but this is just the plain old flex direction styles*/
.direction-column,
.column,
.col {
	flex-direction: column;
}

.direction-column-reverse,
.column-reverse,
.col-reverse {
	flex-direction: column-reverse;
}

.direction-row,
.row { flex-direction: row; }

.direction-row-reverse,
.row-reverse { flex-direction: row-reverse; }

/*---------- MAIN AXIS ROW = X-Axis aligned, COLUMN = Y Axis Aligned----------*/
.row-nw,
.row-nowrap { flex-flow: row nowrap; }

.col-nw,
.col-nowrap,
.column-nowrap { flex-flow: column nowrap; }

.row-wrap { flex-flow: row wrap; }

.column-wrap,
.col-wrap { flex-flow: column wrap; }

.column-reverse-wrap,
.col-reverse-wrap { flex-flow: column-reverse wrap; }

.column-reverse-nowrap,
.col-reverse-nowrap { flex-flow: column-reverse nowrap; }

.row-reverse-wrap { flex-flow: row-reverse wrap; }

.row-reverse-nowrap { flex-flow: row-reverse nowrap; }


/*------------------------------------------=
=      MAIN / PRIMARY AXIS STYLES      =
------------------------------------------=*/
.justify-content-space-around,
.justify-space-around,
.justify-around { justify-content: space-around; }

.justify-content-space-between,
.justify-space-between,
.justify-between { justify-content: space-between; }

.justify-start,
.justify-content-start { justify-content: flex-start; }

.justify-end,
.justify-content-end { justify-content: flex-end; }

.justify-center,
.justify-content-center { justify-content: center; }

/*---== End of MAIN / PRIMARY AXIS STYLES ------*/

/*---------------------------------------------
=      SECONDARY AXIS STYLES      =
---------------------------------------------*/
.align-items-space-around,
.align-space-around { align-items: space-around; }

.align-items-space-between,
.align-space-between { align-items: space-between; }

.align-items-start,
.align-start { align-items: flex-start; }

.align-items-end,
.align-end { align-items: flex-end; }

.align-items-center,
.align-center { align-items: center; }

.align-items-stretch,
.align-stretch { align-items: stretch; }


.align-items-baseline,
.align-baseline { align-items: baseline; }

/* --- End of Secondary Axis Styles ------ */

/* --- Align Content For Content That Wraps:Applies When a Wrapped Item has Extra Space ----------*/
.align-content-space-around,
.content-space-around { align-content: space-around; }

.align-content-space-between,
.content-space-between { align-content: space-between; }

.align-content-start,
.content-start { align-content: flex-start; }

.align-content-end,
.content-end { align-content: flex-end; }

.align-content-center,
.content-center { align-content: center; }


/* ---------= CHILD ITEM STYLES ---------=*/

/* ---------- Align Self is for CHILD ITEMS , it OVERRIDES 'Align-Items' ----------*/
.align-self-start,
.self-start { align-self: start; }

.align-self-end,
.self-end { align-self: end; }

.align-self-center,
.self-center { align-self: center; }

.align-self-stretch,
.self-stretch { align-self: stretch; }

/* ---------- HOW SHOULD THIS CHILD ITEM GROW IN PROPORTION -- defaults to one, proportionate to one ----------*/
.grow-1 { flex-grow: 1; }

.grow-2 { flex-grow: 2; }

.grow-3 { flex-grow: 3; }

.grow-4 { flex-grow: 4; }

/* ---------- ORDER of a CHILD ITEM
defaults to 1, so a negative number would go first ----------*/
.order-minus-one { order: -1; }

.order-one { order: 1; }

.order-two { order: 2; }

.order-three { order: 3; }

.order-last { order: 25; }

/* ------------------------------
	# SVG
--------------------------------- */
img[src*=".svg"] {
	width: 60%;
	height: auto;
	background: rgba(0, 0, 0, 0.25);
}


/* ------------------------------
	# Flickity Overrides
--------------------------------- */

.drag-svg {
	width: 60px;
	height: 60px;
	border-radius: 50%;
	background: var(--blue-600);
	display: flex;
	align-items: center;
	justify-content: center;

	& > svg {
		width: 30px;
		animation: leftToRight 12s infinite;
	}
}

/* ------------------------------
	# Show & Hide Styles
--------------------------------- */
.hide { display: none; }

[hidden] { display: none; }

.hide-on-wide { display: var(--block-until-hide); }

.grid-until-hide { display: var(--grid-until-hide); }

.inline-until-hide { display: var(--inline-until-hide); }

.block-until-hide { display: var(--block-until-hide); }

.flex-until-hide { display: var(--flex-until-hide); }

.hide-until-wide { display: var(--hide-until-wide); }

.hide-until-flex { display: var(--hide-until-flex); }

.hide-until-block { display: var(--hide-until-block); }

.hide-until-grid { display: var(--hide-until-grid); }

.hide-grid-hide { display: var(--hide-grid-hide); }

.grid-hide-grid { display: var(--grid-hide-grid); }

.block-hide-block { display: var(--block-hide-block); }

.hide-block-hide { display: var(--hide-block-hide); }

.flex-hide-flex { display: var(--flex-hide-flex); }

.hide-flex-hide { display: var(--hide-flex-hide); }


.highlight {
	background: var(--blue);

	& > .section-title {
		z-index: 1;
		width: var(--title-container-width);
		padding: var(--header-padding-top-bottom) var(--header-padding-left-right);
		color: var(--foreground);

		& > h4 {
			color: var(--foreground);
		}
	}
	& > .section-content {
		color: var(--foreground);
	}
}

.entry-header {
	display: flex;
	flex-flow: column nowrap;
	align-items: center;
}

.entry-header > h1.entry-title {
	margin: 10px auto;
}

.inner_taxonomy_definition_list {}

#open_space > h3.developer {
	transform-origin: center center;
	color: #fff;

	@media (--wide) {
		transform: rotateZ(-90deg);
	}
}
